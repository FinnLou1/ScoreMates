rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Grundlegende Benutzerregeln
    match /users/{userId} {
      // Benutzer können nur ihre eigenen Daten lesen und aktualisieren
      allow read: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Nur bestimmte Felder dürfen vom Benutzer aktualisiert werden
      allow update: if request.auth != null && 
                     request.auth.uid == userId && 
                     request.resource.data.diff(resource.data).affectedKeys()
                     .hasOnly(['displayName', 'handicap', 'profilePicture']);
      
      // Neue Benutzer dürfen nur erstellt werden, wenn die userId mit der Auth-ID übereinstimmt
      allow create: if request.auth != null && 
                     request.auth.uid == userId && 
                     request.resource.data.userId == request.auth.uid;
    }
    
    // Golf-Runden-Regeln
    match /golfRounds/{roundId} {
      // Jeder authentifizierte Benutzer kann eine Runde erstellen
      allow create: if request.auth != null && 
                     request.resource.data.createdBy == request.auth.uid;
      
      // Nur der Ersteller kann eine Runde bearbeiten oder löschen
      allow update, delete: if request.auth != null && 
                             resource.data.createdBy == request.auth.uid;
      
      // Nur der Ersteller und eingeladene Spieler können eine Runde lesen
      allow read: if request.auth != null && 
                   (resource.data.createdBy == request.auth.uid || 
                    resource.data.players[request.auth.uid] != null);
    }
    
    // Freundschaftsanfragen-Regeln
    match /friendRequests/{requestId} {
      // Nur Sender und Empfänger können die Anfrage lesen
      allow read: if request.auth != null && 
                   (resource.data.senderId == request.auth.uid || 
                    resource.data.receiverId == request.auth.uid);
      
      // Nur der Sender kann eine Anfrage erstellen
      allow create: if request.auth != null && 
                     request.resource.data.senderId == request.auth.uid;
      
      // Nur der Empfänger kann die Anfrage akzeptieren/ablehnen
      allow update: if request.auth != null && 
                     resource.data.receiverId == request.auth.uid && 
                     request.resource.data.diff(resource.data).affectedKeys()
                     .hasOnly(['status']);
      
      // Nur Sender oder Empfänger können die Anfrage löschen
      allow delete: if request.auth != null && 
                     (resource.data.senderId == request.auth.uid || 
                      resource.data.receiverId == request.auth.uid);
    }
  }
}
